<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1056" started-at="2015-03-25T08:23:48Z" finished-at="2015-03-25T08:23:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1056" started-at="2015-03-25T08:23:48Z" finished-at="2015-03-25T08:23:49Z">
      <class name="test.NewTest">
        <test-method status="PASS" signature="t1()[pri:0, instance:test.NewTest@1e0a01f]" name="t1" is-config="true" duration-ms="13" started-at="2015-03-25T16:23:47Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method status="PASS" signature="t3()[pri:0, instance:test.NewTest@1e0a01f]" name="t3" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t3 -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.NewTest@1e0a01f]" name="setUp" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divisionWithException()[pri:0, instance:test.NewTest@1e0a01f]" name="divisionWithException" duration-ms="14" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at test.NewTest.divisionWithException(NewTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionWithException -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.NewTest@1e0a01f]" name="tearDown" is-config="true" duration-ms="1" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testEmptyCollection()[pri:0, instance:test.NewTest@1e0a01f]" name="testEmptyCollection" duration-ms="4" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyCollection -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.NewTest@1e0a01f]" name="setUp" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.NewTest@1e0a01f]" name="tearDown" is-config="true" duration-ms="1" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.NewTest@1e0a01f]" name="setUp" is-config="true" duration-ms="1" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testOneItemCollection()[pri:0, instance:test.NewTest@1e0a01f]" name="testOneItemCollection" duration-ms="2" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneItemCollection -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.NewTest@1e0a01f]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.NewTest@1e0a01f]" name="setUp" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tout()[pri:0, instance:test.NewTest@1e0a01f]" name="tout" duration-ms="1010" started-at="2015-03-25T16:23:48Z" finished-at="2015-03-25T16:23:49Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method org.testng.internal.TestNGMethod.tout() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.tout() didn't finish within the time-out 1000
	at test.NewTest.tout(NewTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:46)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:37)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.NewTest@1e0a01f]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-03-25T16:23:49Z" finished-at="2015-03-25T16:23:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="t4()[pri:0, instance:test.NewTest@1e0a01f]" name="t4" is-config="true" duration-ms="1" started-at="2015-03-25T16:23:49Z" finished-at="2015-03-25T16:23:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t4 -->
        <test-method status="PASS" signature="t2()[pri:0, instance:test.NewTest@1e0a01f]" name="t2" is-config="true" duration-ms="1" started-at="2015-03-25T16:23:49Z" finished-at="2015-03-25T16:23:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t2 -->
      </class> <!-- test.NewTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
